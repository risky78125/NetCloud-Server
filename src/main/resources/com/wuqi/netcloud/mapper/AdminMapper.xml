<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.wuqi.netcloud.mapper.AdminMapper">

    <cache />

    <sql id="sql-admins-condition">
        select admin.admin_id,
        admin.admin_name,
        admin.admin_code,
        admin.telephone,
        admin.email,
        admin.enrolldate,
        group_concat(role.role_name) as role_names
        from admin_info admin
        left join admin_role ar on admin.admin_id = ar.admin_id
        left join role_info role on ar.role_id = role.role_id
        <if test="moduleId != null and moduleId != 0">
            where admin.admin_id in (
            select ar.admin_id from admin_role ar
            left join role_module rm on ar.role_id = rm.role_id
            where module_id = #{moduleId})
        </if>
        group by admin.admin_id
        <if test="roleName != null and roleName.length != 0">
            having role_names like #{roleName}
        </if>
    </sql>

    <select id="countByCondition" resultType="java.lang.Integer">
        select count(*) from (
                <include refid="sql-admins-condition" />
              ) as temp;
    </select>

    <select id="findAllByCondition" resultType="adminExMap">
        <include refid="sql-admins-condition" />
        order by admin.admin_id
        limit #{offset}, #{count}
    </select>

    <resultMap id="roleMap" type="roleExMap" extends="commons.roleMap">
        <result column="selected" property="isSelected"/>
    </resultMap>

    <resultMap id="adminMap" type="adminEntity" extends="commons.adminMap">
        <collection property="roleList" ofType="roleEntity" resultMap="roleMap"/>
    </resultMap>

    <select id="findDetailsById" resultMap="adminMap">
        select admin.admin_id,
               admin.admin_code,
               admin.admin_name,
               admin.telephone,
               admin.email,
               role.role_id,
               role.role_name,
               admin.admin_id = a2.admin_id as selected
        from admin_info admin
                 cross join role_info role
                 left join admin_role ar on role.role_id = ar.role_id and ar.admin_id = admin.admin_id
                 left join admin_info a2 on ar.admin_id = a2.admin_id
        where admin.admin_id = #{adminId}
        order by admin.admin_id, role.role_id
    </select>

    <insert id="addOne" keyColumn="admin_id" keyProperty="adminId">
        insert into admin_info (admin_code, password, admin_name, telephone, email, enrolldate)
        values (#{adminCode}, #{password}, #{adminName}, #{telephone}, #{email}, #{enrolldate});
    </insert>

    <update id="updateOne">
        update admin_info
        set admin_name = #{adminName},
            telephone = #{telephone},
            email = #{email}
        where admin_id = #{adminId};
    </update>

    <delete id="deleteById">
        delete from admin_info where admin_id = #{adminId}
    </delete>

    <select id="findOne" resultType="adminEntity">
        select * from admin_info where admin_id = #{adminId}
    </select>

</mapper>